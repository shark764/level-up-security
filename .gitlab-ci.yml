stages :
  - build
  - deploy

image: docker:19.03.12

variables:
  # When using dind service, you must instruct docker to talk with the
  # daemon started inside of the service. The daemon is available with
  # a network connection instead of the default /var/run/docker.sock socket.
  #
  # The 'docker' hostname is the alias of the service container as described at
  # https://docs.gitlab.com/ee/ci/docker/using_docker_images.html#accessing-the-services
  #
  # If you're using GitLab Runner 12.7 or earlier with the Kubernetes executor and Kubernetes 1.6 or earlier,
  # the variable must be set to tcp://localhost:2375 because of how the
  # Kubernetes executor connects services to the job container
  # DOCKER_HOST: tcp://localhost:2375
  #
  DOCKER_HOST: tcp://docker:2375
  #
  # This instructs Docker not to start over TLS.
  DOCKER_TLS_CERTDIR: ""

services:
  - docker:19.03.12-dind

build:
  only :
    - master
  stage: build
  before_script:
    - apk add git
    - mkdir -p src/db/models/
    - git clone https://$GIT_USER:$GIT_TOKEN@gitlab.com/focus-ventures/schemas.git src/db/models/schemas
  script:
    - docker build -t $DOCKER_REGISTRY_URL/lul-registry/lul-security -t $DOCKER_REGISTRY_URL/lul-registry/lul-security:$CI_COMMIT_SHORT_SHA .
    - mkdir ~/.docker
    - cat $DOCKER_CREDS > ~/.docker/config.json
    - docker login $DOCKER_REGISTRY_URL
    - docker push $DOCKER_REGISTRY_URL/lul-registry/lul-security

deploy_dev:
  only :
    - master
  stage: deploy
  image: devth/helm
  before_script:
      - wget https://github.com/digitalocean/doctl/releases/download/v1.64.0/doctl-1.64.0-linux-amd64.tar.gz
      - tar xf ~/doctl-1.64.0-linux-amd64.tar.gz
      - sudo mv ~/doctl /usr/local/bin
      - doctl auth init --access-token $DIGITALOCEAN_ACCESS_TOKEN
      - doctl kubernetes cluster kubeconfig save $DIGITALOCEAN_CLUSTER_NAME
      - cp ~/.kube/config kube/
      - export KUBECONFIG=kube/config
  script:
      - git clone https://$GIT_USER:$GIT_TOKEN@gitlab.com/focus-ventures/lul-infra.git
      - cd lul-infra/charts
      - helm upgrade -i lul-security lul-security  -f lul-security/environments/dev.yaml
